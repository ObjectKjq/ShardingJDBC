mybatis-plus:
  mapper-locations: classpath:/mapper/*.xml

spring:
  application:
    name: ShardingJDBC
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://192.168.50.41:3306/test
#    username: root
#    password: test1
#    type: com.alibaba.druid.pool.DruidDataSource

  #  主库数据源
  shardingsphere:
    sharding:
      tables:
        t_goods:
          actual-data-nodes: ds0.t_goods_${1..2}
          # 指定goods表 主键gid 生成策略为 SNOWFLAKE
          key-generator:
            column: gid
            type: SNOWFLAKE
          # 指定分片策略 约定gid值是偶数添加到goods_1表，如果gid是奇数添加到goods_2表
          table-strategy:
            inline:
              sharding-column: gid
              algorithm-expression: t_goods_$->{gid % 2 + 1}
    props:
      sql:
        # 日志打印SQL语句
        show: true
#    # 读写分离配置
#    masterslave:
#      # dataSource 随意给masterslave 设置一个名字
#      name: dataSource
#      # 负载均衡算法 round_robin随机（内置算法）
#      load-balance-algorithm-type: round_robin
#      # 主库
#      master-data-source-name: ds0
#      # 从库
#      slave-data-source-names: ds1,ds2
    datasource:
      # 数据源名称定义
      names: ds0
      # 主数据源
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.50.41:3306/test
        username: root
        password: test1
#      # 从数据源
#      ds1:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.50.42:3306/test
#        username: root
#        password: test1
#      ds2:
#        type: com.alibaba.druid.pool.DruidDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://192.168.50.43:3306/test
#        username: root
#        password: test1



